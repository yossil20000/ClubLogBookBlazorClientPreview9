@page "/ClubContacts"
@using ClubLogBook.Application.ViewModels

@inject HttpClient Http
@inject IdentityAuthenticationStateProvider authStateProvider
<h1>Club Contacts</h1>
			
<AuthorizeView Roles="Administrators,AccountManage,Members">
    <Authorized>
        @if (contacts == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            @*<h2>Current User : @CurrentUser.UserName</h2>*@
            <div>
                @*<a href='/Create'>Create Contact</a>*@
                @if (IsCurrentAdmin)
                {
                    <a href='/Add'>Add Contact To Baz Club</a>
                }
            </div>
            @if (false)
            {
                <table class="table">

                    <thead>
                        <tr>
                            <th>Id Number</th>
                            <th>Full Name</th>
                            <th>Date Of Birth</th>
                            <th>Gender</th>
                            <th>Address</th>
                            <th>Phone</th>
                            <th>eMail</th>
                            <th colspan="2"><button class="btn btn-warning"><a href='/Add'>Add Contact To Baz Club</a></button></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var pilot in contacts)
                        {
                            <tr>
                                <td>@pilot.IdNumber</td>
                                <td>@pilot.GetFullName()</td>
                                <td>@pilot.DateOfBirth </td>
                                <td>@pilot.Gender</td>
                                <td>@pilot.Addresses.FirstOrDefault().GetFormated()</td>
                                <td>@pilot.Phones?.FirstOrDefault().GetFormated()</td>

                                <td>@pilot.Emails?.FirstOrDefault().GetFormated()</td>
                                <td>
                                    @if (pilot.UserId.ToString() == CurrentUser.Id || IsCurrentAdmin)
                                    {
                                        <a class="btn btn-info" href='/Edit/@pilot.Id'>Edit</a>
                                    }
                                </td>
                                <td>
                                    @if (IsCurrentAdmin)
                                    {

                                        <a class="btn btn-danger" href='/Delete/@pilot.Id'>Remove From Club</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
            else
            {
                <div class="grid-table">
                    <div class="grid-table-row grid-type-customer">
                        <div class="grid-table-cell"><button class="btn-grid">Id Number</button></div>
                        <div class="grid-table-cell"><button class="btn-grid">Name</button></div>
                        <div class="grid-table-cell"><button class="btn-grid">Birthday</button></div>
                        <div class="grid-table-cell">Gender</div>
                        <div class="grid-table-cell">Address</div>
                        <div class="grid-table-cell">Phone</div>
                        <div class="grid-table-cell">Action</div>
                        <div class="grid-table-cell">Action</div>
                    </div>
                    @foreach (var pilot in contacts)
                    {
                        <div class="grid-table-row grid-type-customer">
                            <div class="grid-table-cell" data-title="Id Number">@pilot.IdNumber</div>
                            <div class="grid-table-cell" data-title="Full Name">@pilot.GetFullName()</div>
                            <div class="grid-table-cell" data-title="Birthday">@pilot.DateOfBirth.ToShortDateString()</div>
                            <div class="grid-table-cell" data-title="Gender">@pilot.Gender</div>
                            <div class="grid-table-cell" data-title="Address">@pilot.Addresses.FirstOrDefault().GetFormated()</div>
                            <div class="grid-table-cell" data-title="Phone">@pilot.Phones?.FirstOrDefault().GetFormated()</div>
                            @if (IsCurrentAdmin || CurrentUser.Id == pilot.UserId.ToString())
                            {
                                <div class="grid-table-cell" data-title="Edit"> <a  href='/Edit/@pilot.Id'>Edit</a></div>
                            }
                            else
                            {
                                <div class="grid-table-cell " data-title="Edit"> <a disabled="disabled">Edit</a></div>
                            }

                            <div class="grid-table-cell" data-title="Delete"><a href='/Delete/@pilot.Id'>Delete</a></div>
                        </div>
                    }


                </div>
            }

        }


    </Authorized>
    <NotAuthorized>
        <p>You're not Authorized , Please Loging as one of this User Type :Administrators,AccountManage,Members</p>
    </NotAuthorized>
</AuthorizeView>


@functions {
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    ClubContactsViewModel[] contacts;
    AdminUserInfo CurrentUser { get; set; }
    bool IsCurrentAdmin { get; set; } = false;
    protected override async Task OnInitializedAsync()
    {
        contacts = await Http.GetJsonAsync<ClubContactsViewModel[]>("api/ClubContacts/Pilots");
        var authState = await authenticationStateTask;
         var user = authState.User;
        CurrentUser = await authStateProvider.CurrentUser();
        IsCurrentAdmin = user.IsInRole(IdentityInfo.Roles.Administrators.ToString());
    }

}
