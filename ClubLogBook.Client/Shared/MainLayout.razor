@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider
@using Radzen.Blazor

<div class="sidebar">
    <NavMenu />
</div>

<div class="main">
    <div class="top-row px-4">
        @if (CurrentUser != null)
        {
            <span>Hello: @CurrentUser.UserName</span>
        }
        else
        {
            <span>Hello : @name</span>
        }

        <button type="button" class="btn btn-link ml-md-auto" @onclick="LogoutClick">Logout Me</button>
    </div>

    <div class="content px-4">
        @Body
    </div>
</div>



@functions{

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; }
    AdminUserInfo CurrentUser { get; set; }
    string name = "Unknown";

    protected override async Task OnParametersSetAsync()
    {
        if (!(await AuthenticationState).User.Identity.IsAuthenticated)
        {
            ClaimsPrincipal claims = (await AuthenticationState).User;
            if (claims != null)
                name = claims.Identity.Name;
            navigationManager.NavigateTo("/login");
        }
        else
        {
            //navigationManager.NavigateTo("/index");
        }
    }

    async Task LogoutClick()
    {
        await authStateProvider.Logout();
        navigationManager.NavigateTo("/login");
    }
    protected override async Task OnInitializedAsync()
    {
        //var authState = await AuthenticationState;
        //var user = authState.User;
        //CurrentUser = await authStateProvider.CurrentUser();
        CurrentUser = await authStateProvider.CurrentUser();

    }
}