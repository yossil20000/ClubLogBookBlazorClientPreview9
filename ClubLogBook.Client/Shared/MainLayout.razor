@inherits LayoutComponentBase
@inject NavigationManager navigationManager
@inject IdentityAuthenticationStateProvider authStateProvider

    <div class="l__page ">

        <div class="l__page__logo">
            <img src="/Image/club-image.png" alt="club-image" class="l__page__logo__img">
        </div>
        <div class="l__page__header">
            @if (CurrentUser != null)
            {
                <span class="float-left">Baz Club Flight Hello: @CurrentUser.UserName</span>
                <button type="button" class="btn btn-link ml-md-auto float-right" @onclick="LogoutClick">Logout Me</button>
            }
            else
            {
                <span>Hello : @name</span>
            }
        </div>
        <div class="l__page__nav__header">@PageHeader</div>
        <div class="l__page__side l__page__side--hide">
            i amm page side
        </div>
        <div class="l__page__nav__button ">
            <button @onclick="@ToggleNavMenu">
                <span class="oi oi-list" aria-hidden="true"></span> Menue
            </button>
           
        </div>
        <div class="@NavMenuCssClass">
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Index" Match="NavLinkMatch.All">
                        <span class="oi oi-home" aria-hidden="true"> Home</span>
                    </NavLink>
                </div>



            </div>
            @*<div class="l__page__nav__item">
            <li class="nav-item px-3">
                <NavLink class="nav-link" href="counter">
                    <span class="oi oi-plus" aria-hidden="true"> Counter</span>
                </NavLink>
            </li>
        </div>

        <div class="l__page__nav__item">
            <div class="nav-item px-3">
                <NavLink class="nav-link" href="fetchdata">
                    <span class="oi oi-list-rich" aria-hidden="true"> Fetch Data</span>
                </NavLink>
            </div>
        </div>*@

            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="ClubContacts">
                        <span class="iconify" data-icon="bx:bxs-group" data-inline="true"></span><span> Contacts</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Reservation/FlightReservation">
                        <span class="iconify" data-icon="ic:baseline-airline-seat-recline-extra" data-inline="false"></span>
                        <span> Flight Reservation</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="AccountManager/MyAccount">
                        <span class="iconify" data-icon="ic:baseline-account-balance" data-inline="false"></span>
                        <span> My Account</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Contact/ContactEditor">
                        <span class="iconify" data-icon="mdi:account-plus" data-inline="false"></span>
                        <span> Contact Editor</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <li class="nav-item px-3">
                    <NavLink class="nav-link" href="Flight/ClubFlight">
                        <span class="iconify" data-icon="ion:airplane-sharp" data-inline="false"></span>
                        <span> Flight</span>
                    </NavLink>
                </li>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="AccountManager/AccountManager">
                        <span class="iconify" data-icon="ic:outline-supervisor-account" data-inline="false"></span>
                        <span> Account Manager</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="Administration">
                        <span class="iconify" data-icon="flat-color-icons:manager" data-inline="false"></span>
                        <span> Administration</span>
                    </NavLink>
                </div>
            </div>
            <div class="l__page__nav__item">
                <div class="nav-item px-3">
                    <NavLink class="nav-link" href="FetchDatamvvm">
                        <span class="iconify" data-icon="flat-color-icons:manager" data-inline="false"></span>
                        <span> Fetch Data</span>
                    </NavLink>
                </div>
            </div>
        </div>
        <div class="l__page__content">
            @Body
        </div>

        
    </div>


@*<div class="l__page">
        <div class="l__page__logo">l__page__logo</div>
        <div class="l__page__side ">

        </div>
        <div class="l__page__nav__button">
            <a class="navbar-brand" href="">ClubLogBook</a>
            <button class="navbar-toggler" @onclick="@ToggleNavMenu">
                <span class="navbar-toggler-icon"></span>
            </button>

        </div>
        <div class="l__page__nav">

            <NavMenu NavMenuCssClass="@NavMenuCssClass" />
        </div>
        <div class="l__page__nav__header">
            <div class="top-row px-4">
                @if (CurrentUser != null)
                {
                    <span>Hello: @CurrentUser.UserName</span>
                }
                else
                {
                    <span>Hello : @name</span>
                }

                <button type="button" class="btn btn-link ml-md-auto" @onclick="LogoutClick">Logout Me</button>
            </div>
        </div>
        <div class="l__page__header">I am l__page__header</div>
       C
        <div class="l__page__footer">I am l__page__footer</div>
    </div>*@

@*<div class="sidebar">
        <NavMenu />
    </div>

    <div class="main">
        <div class="top-row px-4">
            @if (CurrentUser != null)
            {
                <span>Hello: @CurrentUser.UserName</span>
            }
            else
            {
                <span>Hello : @name</span>
            }

            <button type="button" class="btn btn-link ml-md-auto" @onclick="LogoutClick">Logout Me</button>
        </div>

        <div>
            @Body
        </div>
    </div>*@



@functions{

    [CascadingParameter]
    Task<AuthenticationState> AuthenticationState { get; set; }

    [Parameter] public string NavMenuCssClass { get; set; } = "l__page__nav l__page__nav--show";
    [Parameter] public string PageHeader { get; set; }
    [Parameter] public string PageFooter { get; set; } = "Main";
    bool collapseNavMenu = true;
    AdminUserInfo CurrentUser { get; set; }
    string name = "Unknown";

    protected override async Task OnParametersSetAsync()
    {
        NavMenuCssClass = collapseNavMenu ? "l__page__nav l__page__nav--show" : "l__page__nav l__page__nav--hide";
        if (!(await AuthenticationState).User.Identity.IsAuthenticated)
        {
            ClaimsPrincipal claims = (await AuthenticationState).User;
            if (claims != null)
                name = claims.Identity.Name;
            navigationManager.NavigateTo("/login");
        }
        else
        {
            //navigationManager.NavigateTo("/index");
        }

    }

    async Task LogoutClick()
    {
        await authStateProvider.Logout();
        navigationManager.NavigateTo("/login");
    }
    protected override async Task OnInitializedAsync()
    {
        //var authState = await AuthenticationState;
        //var user = authState.User;
        //CurrentUser = await authStateProvider.CurrentUser();
        CurrentUser = await authStateProvider.CurrentUser();

    }



    void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
        NavMenuCssClass = collapseNavMenu ? "l__page__nav l__page__nav--show" : "l__page__nav l__page__nav--hide";
    }
}