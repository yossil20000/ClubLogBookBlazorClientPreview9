// <auto-generated />
using System;
using ClubLogBook.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClubLogBook.Infrastructure.Migrations
{
    [DbContext(typeof(ClubLogbookContext))]
    [Migration("20191013073103_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClubLogBook.Core.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<string>("Zipcode")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.AirCraftModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double?>("EngineTime")
                        .HasColumnType("float");

                    b.Property<DateTime?>("FirstFlight")
                        .HasColumnType("datetime2");

                    b.Property<int>("FlightCount")
                        .HasColumnType("int");

                    b.Property<string>("FrequentlyUsed")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Hours")
                        .HasColumnType("float");

                    b.Property<double?>("Last100")
                        .HasColumnType("float");

                    b.Property<DateTime?>("LastAltimeter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastAnnual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastELT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastFlight")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastPitotStatic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastTransponder")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("LastVOR")
                        .HasColumnType("datetime2");

                    b.Property<string>("Manufacturer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelFullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NextAltimeter")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextAnnual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextELT")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextPitotStatic")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextTransponder")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NextVOR")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("OilChange")
                        .HasColumnType("datetime2");

                    b.Property<string>("PrivateNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PublicNotes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RegistrationRenewalDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrainingDeviceKind")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeDesignation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AirCraftModels");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Aircraft", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AirCraftModelId")
                        .HasColumnType("int");

                    b.Property<int>("AircraftCategory")
                        .HasColumnType("int");

                    b.Property<int>("AircraftClass")
                        .HasColumnType("int");

                    b.Property<int>("AircraftState")
                        .HasColumnType("int");

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<bool?>("Complex")
                        .HasColumnType("bit");

                    b.Property<bool?>("ConstantSpeedProp")
                        .HasColumnType("bit");

                    b.Property<bool?>("Flaps")
                        .HasColumnType("bit");

                    b.Property<bool?>("HighPerformance")
                        .HasColumnType("bit");

                    b.Property<bool?>("Jet")
                        .HasColumnType("bit");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<bool?>("Retractable")
                        .HasColumnType("bit");

                    b.Property<string>("TailNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TailWheel")
                        .HasColumnType("bit");

                    b.Property<bool?>("Turbine")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("AirCraftModelId");

                    b.HasIndex("ClubId");

                    b.ToTable("Aircrafts");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.AircraftLogBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AircraftLogBookId")
                        .HasColumnType("int");

                    b.Property<string>("TaiNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AircraftLogBooks");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.AircraftReservation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AircraftId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.Property<string>("ReservationInfo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TailNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("AircraftReservations");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Checkride", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PilotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Checkrides");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Club", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clubs");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactBookId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactBookId");

                    b.ToTable("Contacts");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.ContactBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ContactBooks");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.CustomPropertyType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Flags")
                        .HasColumnType("int");

                    b.Property<string>("FormatString")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SortKey")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.HasKey("Id");

                    b.ToTable("CustomPropertyTypes");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.EMAIL", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("EMail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("EMAILs");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Endorsment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("ExpiredTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("GivenDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PilotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Endorsments");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Flight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AircraftId")
                        .HasColumnType("int");

                    b.Property<int?>("AircraftLogBookId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("EngineEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EngineStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HobbsEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HobbsStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("PilotId")
                        .HasColumnType("int");

                    b.Property<string>("Routh")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("AircraftLogBookId");

                    b.HasIndex("PilotId");

                    b.ToTable("Flights");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.FlightRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AerobaticsTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AgriculturalTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("AircraftId")
                        .HasColumnType("int");

                    b.Property<short>("Approaches")
                        .HasColumnType("smallint");

                    b.Property<decimal>("BannerTowingTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BushTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CFI")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Dual")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EngineEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EngineStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("FlightComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("From")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GroundSimulator")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HobbsEnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("HobbsStart")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Holds")
                        .HasColumnType("smallint");

                    b.Property<decimal>("Instrument")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("Landings")
                        .HasColumnType("smallint");

                    b.Property<int?>("LogBookId")
                        .HasColumnType("int");

                    b.Property<decimal>("Night")
                        .HasColumnType("decimal(18,2)");

                    b.Property<short>("NightLandings")
                        .HasColumnType("smallint");

                    b.Property<decimal>("PIC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Routh")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SIC")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Simulated")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Solo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("To")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalTime")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("XCountry")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("AircraftId");

                    b.HasIndex("LogBookId");

                    b.ToTable("FlightRecords");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.License", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LicenseNumber")
                        .HasColumnType("int");

                    b.Property<int?>("PilotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("Licenses");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.LogBook", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("PilotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PilotId");

                    b.ToTable("LogBooks");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Phone", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AreaCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("CountryCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Phones");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Pilot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ClubId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<decimal>("Height")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("IdNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("Photo")
                        .HasColumnType("varbinary(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClubId");

                    b.HasIndex("ContactId");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Address", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Contact", null)
                        .WithMany("Addresses")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Aircraft", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.AirCraftModel", "AirCraftModel")
                        .WithMany()
                        .HasForeignKey("AirCraftModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ClubLogBook.Core.Entities.Club", null)
                        .WithMany("Aircrafts")
                        .HasForeignKey("ClubId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Checkride", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Pilot", null)
                        .WithMany("Checkrides")
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Contact", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.ContactBook", null)
                        .WithMany("Contacts")
                        .HasForeignKey("ContactBookId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.EMAIL", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Contact", null)
                        .WithMany("EMAILs")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Endorsment", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Pilot", null)
                        .WithMany("Endorsments")
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Flight", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("ClubLogBook.Core.Entities.AircraftLogBook", null)
                        .WithMany("Flights")
                        .HasForeignKey("AircraftLogBookId");

                    b.HasOne("ClubLogBook.Core.Entities.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.FlightRecord", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Aircraft", "Aircraft")
                        .WithMany()
                        .HasForeignKey("AircraftId");

                    b.HasOne("ClubLogBook.Core.Entities.LogBook", null)
                        .WithMany("FlightRecords")
                        .HasForeignKey("LogBookId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.License", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Pilot", null)
                        .WithMany("Licenses")
                        .HasForeignKey("PilotId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.LogBook", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Pilot", "Pilot")
                        .WithMany()
                        .HasForeignKey("PilotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Phone", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Contact", null)
                        .WithMany("Phones")
                        .HasForeignKey("ContactId");
                });

            modelBuilder.Entity("ClubLogBook.Core.Entities.Pilot", b =>
                {
                    b.HasOne("ClubLogBook.Core.Entities.Club", null)
                        .WithMany("Members")
                        .HasForeignKey("ClubId");

                    b.HasOne("ClubLogBook.Core.Entities.Contact", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactId");
                });
#pragma warning restore 612, 618
        }
    }
}
